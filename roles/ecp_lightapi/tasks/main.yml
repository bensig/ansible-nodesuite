---
- name: Install LightAPI reqs
  apt:
    force_apt_get: yes
    update_cache: true
    state: present
    pkg:
    - git
    - make
    - cpanminus
    - gcc
    - g++
    - mariadb-server
    - libmysqlclient-dev
    - libdbi-perl
    - libjson-xs-perl
    - libjson-perl
    - libdatetime-format-iso8601-perl

- name: Install DBD::MariaDB perl package
  community.general.cpanm:
    name: DBD::MariaDB

- name: Install Starman perl package
  community.general.cpanm:
    name: Starman

- name: Install Net::WebSocket::Server perl package
  community.general.cpanm:
    name: Net::WebSocket::Server

- name: Install Crypt::Digest::RIPEMD160 perl package
  community.general.cpanm:
    name: Crypt::Digest::RIPEMD160

- name: check if lightapi service
  stat:
    path: /etc/systemd/system/lightapi_api.service
  register: __check_if_lightapi_service

- name: Clone LightAPI Repo
  git:
    repo: https://github.com/cc32d9/eosio_light_api.git
    dest: "{{ working_dir }}/eosio_light_api"
    force: yes
  when: __check_if_lightapi_service.stat.exists == false

- name: Create mysql databases
  shell: "mysql <{{ working_dir }}/eosio_light_api/sql/lightapi_dbcreate.sql"
  when: __check_if_lightapi_service.stat.exists == false

- name: Add chain 
  shell: "sh {{ working_dir }}/eosio_light_api/setup/add_{{ name }}_mainnet.sh"
  when: __check_if_lightapi_service.stat.exists == false

- name: Get Package Facts
  package_facts:
    manager: auto

- include: nodejs.yml
  when: "'nodejs' not in ansible_facts.packages"

- name: Install packages based on package.json
  community.general.npm:
    path: "{{ working_dir }}/eosio_light_api/wsapi"

- name: Adding Chronicle Consumer Socket Details
  template:
    src: lightapi_eos.j2
    dest: /etc/default/lightapi_eos

- name: Chain Install DBWrite
  shell: "sh {{ working_dir }}/eosio_light_api/systemd/install_systemd_dbwrite.sh {{ name }}"
  when: __check_if_lightapi_service.stat.exists == false

- name: Enabling LightAPI as a service
  shell:
    cmd: "sh {{ working_dir }}/eosio_light_api/systemd/install_systemd_api.sh"
    chdir: "{{ working_dir }}/eosio_light_api/systemd/"
  when: __check_if_lightapi_service.stat.exists == false

- name: Enabling LightAPI on specific ports
  shell:
    cmd: "sh {{ working_dir }}/eosio_light_api/systemd/install_systemd_wsapi.sh {{ lightapi_ports }}"
    chdir: "{{ working_dir }}/eosio_light_api/systemd/"
  when: __check_if_lightapi_service.stat.exists == false

- name: Cron job for token holder counts
  template:
    src: lightapi.j2
    dest: /etc/cron.d/lightapi
