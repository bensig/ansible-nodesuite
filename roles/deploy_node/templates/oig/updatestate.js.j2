const { Api, JsonRpc, RpcError } = require('eosjs');
const { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');
const fetch = require('node-fetch');                                    // node only; not needed in browsers
const { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder
const request = require('request');


const oigContract = "{{ oig_contract }}";
const defaultPrivateKey = "{{ oig_private_key }}"; // bob
const signatureProvider = new JsSignatureProvider([defaultPrivateKey]);
const rpc = new JsonRpc('{{ oig_rpc_endpoint }}', { fetch });
const api = new Api({
    rpc, signatureProvider, 
    textDecoder: new TextDecoder(), 
    textEncoder: new TextEncoder() 
});


function state_refresh() {
        (async () => {
            const result = await api.transact({
                actions: [{
                    account: oigContract,
                    name: 'updtstate',
                    authorization: [{
                        actor: '{{ oig_account_name }}',
                        permission: '{{ oig_permission }}',
                    }],
                    data: {},
                }]
            },
            {
                blocksBehind: 3,
                expireSeconds: 30,
            });
            console.dir(result);
        })();
}

state_refresh();